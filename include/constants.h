#pragma once

typedef long double PRECISION_TYPE;
// typedef double PRECISION_TYPE;

// * Constants * //
const PRECISION_TYPE PI = 3.141592653589793238462643383279502884197169399375105820974944L;
const PRECISION_TYPE MU0 = 1.2566370612720e-6L;
const PRECISION_TYPE TOO_SMALL = 1e-16L;

// * Geometry * //
const int NUM_REPS = 10;
const PRECISION_TYPE HEIGHT_ONE_REP = (2.65559999993917 + 0.12700599999999995) / 1000;

// * One Pole
const PRECISION_TYPE YMIN = 0.0745003179;
const PRECISION_TYPE YMIN_STITCHED = YMIN - HEIGHT_ONE_REP * (NUM_REPS - 1);
const PRECISION_TYPE YMAX = 0.0757665179;

const PRECISION_TYPE ZMAX = 0.1299945058;
const PRECISION_TYPE ZMIN = -0.05763149421;

const PRECISION_TYPE XMIN = -0.08036515459;
const PRECISION_TYPE XMAX = 0.1034488454;

// Calculate the ranges
const PRECISION_TYPE XRANGE = XMAX - XMIN;
const PRECISION_TYPE YRANGE = YMAX - YMIN;
const PRECISION_TYPE ZRANGE = ZMAX - ZMIN;

const PRECISION_TYPE Y_RANGE_STITCHED = YMAX - YMIN_STITCHED;

// * 4 Poles
const PRECISION_TYPE QPOLE_ZMIN = -ZRANGE / 2;
const PRECISION_TYPE QPOLE_ZMAX = ZRANGE / 2;
const PRECISION_TYPE QPOLE_ZRANGE = QPOLE_ZMAX - QPOLE_ZMIN;

const PRECISION_TYPE QPOLE_XMIN = -1 * (XRANGE + 48 / 2000); // One stack's width + 48mm gap split in half
const PRECISION_TYPE QPOLE_XMAX = -1 * QPOLE_XMIN;
const PRECISION_TYPE QPOLE_XRANGE = QPOLE_XMAX - QPOLE_XMIN;

const PRECISION_TYPE QPOLE_YMIN = QPOLE_XMIN;
const PRECISION_TYPE QPOLE_YMAX = QPOLE_XMAX;
const PRECISION_TYPE QPOLE_YRANGE = QPOLE_XRANGE;

// * Bender
const PRECISION_TYPE BENDER_XMIN = -0.001979832;
const PRECISION_TYPE BENDER_XMAX = 0.060686016;

const PRECISION_TYPE BENDER_YMIN = -0.009995184;
const PRECISION_TYPE BENDER_YMAX = 0.040629858;
const PRECISION_TYPE BENDER_ZMIN = -0.020344348;
const PRECISION_TYPE BENDER_ZMAX = 0.073652156;

const PRECISION_TYPE BENDER_CURRENT = 1600.0; // Amperes

const PRECISION_TYPE BENDER_XRANGE = BENDER_XMAX - BENDER_XMIN;
const PRECISION_TYPE BENDER_YRANGE = BENDER_YMAX - BENDER_YMIN;
const PRECISION_TYPE BENDER_ZRANGE = BENDER_ZMAX - BENDER_ZMIN;

// * Bitter Coil (Test 1 Coil)
const PRECISION_TYPE BITTER_XMIN = -0.027088403884;
const PRECISION_TYPE BITTER_XMAX = 0.027088403884;

const PRECISION_TYPE BITTER_YMIN = -0.032274010034;
const PRECISION_TYPE BITTER_YMAX = 0.026902797733;

const PRECISION_TYPE BITTER_ZMIN = 0.0;
const PRECISION_TYPE BITTER_ZMAX = 0.02895600000;

const PRECISION_TYPE BITTER_XRANGE = BITTER_XMAX - BITTER_XMIN;
const PRECISION_TYPE BITTER_YRANGE = BITTER_YMAX - BITTER_YMIN;
const PRECISION_TYPE BITTER_ZRANGE = BITTER_ZMAX - BITTER_ZMIN;

// * Final Grid
const PRECISION_TYPE FINAL_XMIN = -0.04;
const PRECISION_TYPE FINAL_XMAX = 0.04;
const PRECISION_TYPE FINAL_YMIN = -0.04;
const PRECISION_TYPE FINAL_YMAX = 0.04;

const PRECISION_TYPE FINAL_ZMIN = -0.219236461947642;
const PRECISION_TYPE FINAL_ZMAX = 0.07311966058022869;

// * Simulation * //
constexpr auto OUTPUT_PRECISION = 20;
constexpr auto NUM_THREADS = 28;
// constexpr auto NUM_THREADS = 4;

// * Data * //
constexpr auto TRACES_DIR = "../data/particle_data_stitched";
constexpr auto TRACES_DIR_QPOLE = "../data/particle_data_expanded";

constexpr auto TRACES_DIR_BITTER_COIL = "../data/coil_data_trimmed";
